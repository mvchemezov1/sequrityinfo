КТ 1
N1
Тема:
Шифр Альбам. Пример создания программного кода, зашифровывающего и расшифровывающего сообщение по алгоритму шифра Альбам.
Задача:
 Создать программный код зашифровывающий, а затем расшифровывающий предложение, записанное на русском языке. Использовать шифр Альбам, в котором каждая буква русского алфавита заменяется другой буквой преобразованного алфавита. При этом замена осуществляется по правилу: 1-ая буква заменяется 17-ой, 17-ая – 2-ой и т.д. Так, А заменяется на Р, Р - на А, Б - на С ит. д.
Формализация задачи:
 Решение поставленной задачи сводится к замене букв исходного текста (алфавит по порядку) буквами преобразованного алфавита. . Исходные данные: буквы русского алфавита, записанные в алфавитном порядке за исключением буквы Е, буквы русского алфавита за исключением буквы Ё, выписанные сначала с 17-ой буквы, затем в середине оканчивающееся 32 и продолжающееся с 1 и оканчивающееся 16-ой Шифруемое сообщение: «простая замена - один из самых древних шифров». Выходные данные: сообшение до его шифровки, после шифровки и после расшифровки.
Разработка алгоритма: 
Алгоритм шифрования и дешифрования Альбам состоит из следующих ‘Этапов:
1.	Инициализация. Исходный алфавит и новый алфавит определяются как константы. 
2.	Новый алфавит образуется деление исходного алфавита на две равные части и перестановки этих частей.
3.	Шифрование. Строка, которую необходимо зашифровать, приводится к нижнему регистру и разбивается на символы. Каждый символ строки сравнивается с символами исходного алфавита. Если символ найден в исходном алфавите, то в новой строке записывается символ нового алфавита, соответствующий данному символу исходного алфавита. Если символ не найден в исходном алфавите, то он просто копируется в новую строку без изменений.
4.	Дешифрование. Шифрованная строка разбивается на символы. Каждый символ строки сравнивается с символами нового алфавита. Если символ найден в новом алфавите, то в новой строке записывается символ исходного алфавита, соответствующий данному символу нового алфавита. Если символ не найден в новом алфавите, то он просто копируется в новую строку без изменений.
Описание каждой строчки:
Private n As Long
‘Эта переменная используется для хранения количества символов в исходной строке.
Const ABB As String = "абвгдеёжзийклмнопрстуфхцчшщъыьэюя"
‘Эта константа определяет исходный алфавит.
Const HoBABB As String = "рстуфхцчшщъыьэюяабвгдеёжзийклмноп"
‘Эта константа определяет новый алфавит.
Private Sub AnotherCipher()
‘Этот подпрограмма запускает шифрование и расшифровку.
Dim STR As String, strT As String, strR As String
‘Эти переменные используются для хранения исходной строки, зашифрованной строки и расшифрованной строки.
STR = "Простая замена это один из самых древних шифров"
‘Эта строка используется в качестве исходной строки для шифрования.
STR = LCase(STR)
‘Эта строка преобразует исходную строку в нижний регистр.
Debug.Print STR
‘Эта строка выводит исходную строку в окно Immediate.
Decode STR, strR, ABB, HoBABB
‘Эта строка зашифровывает исходную строку с использованием исходного и нового алфавитов.
Debug.Print strR
‘Эта строка выводит зашифрованную строку в окно Immediate.
Decode strR, strT, HoBABB, ABB
‘Эта строка расшифровывает зашифрованную строку с использованием нового и исходного алфавитов.
Debug.Print strT
‘Эта строка выводит расшифрованную строку в окно Immediate.
Private Sub Decode(STR, STRS, Oldkey, NewKey)
‘Эта подпрограмма выполняет шифрование или расшифровку строки.
Dim n As Long, i As Long
‘Эти переменные используются для хранения количества символов в исходной строке и индекса текущего символа в исходной строке.
Dim tmp As String
‘Эта переменная используется для хранения текущего символа исходной строки.
n = Len(STR)
‘Эта строка определяет количество символов в исходной строке.
STRS = Space(n)
‘Эта строка создает строку, состоящую из n пробелов.
For i = 1 To n
‘Эта цикл повторяется n раз.
tmp = Mid(STR, i, 1)
‘Эта строка выделяет текущий символ исходной строки.
k = InStr(1, Oldkey, tmp)
‘Эта строка определяет место текущего символа исходной строки в исходном алфавите.
If k = 0 Then
‘Эта ветвь выполняется, если в исходном алфавите нет текущего символа.
Mid(STRS, i, 1) = tmp
‘Эта строка копирует текущий символ исходной строки в преобразованную строку.
Else
‘Эта ветвь выполняется, если в исходном алфавите есть текущий символ.
Mid(STRS, i, 1) = Mid(NewKey, k, 1)
‘Эта строка заменяет текущий символ исходной строки на соответствующий символ нового алфавита.
End If
‘Эта строка завершает ветвь.
Next i
‘Эта строка завершает цикл.
End Sub
‘Эта строка завершает подпрограмму.
Плюсы и минусы шифра Альбам:
Преимущества:

Простота реализации. Шифр Альбам с перестановкой можно реализовать с помощью простых операций сравнения и замены. Это означает, что его можно легко использовать в различных приложениях, таких как шифрование электронных писем, сообщений и файлов.
Скорость. Шифр Альбам с перестановкой относительно быстр в реализации и дешифровке. Это означает, что его можно использовать в приложениях, где важна скорость, таких как шифрование в реальном времени.
Сложность для частотного анализа. Шифр Альбам с перестановкой более устойчив к частотному анализу, чем обычный шифр Альбам, поскольку он не использует алфавит в естественном порядке. Это означает, что злоумышленнику будет сложнее определить, какой символ соответствует какой букве.
Недостатки:

Неустойчивость к атакам с использованием словарей. Шифр Альбам с перестановкой также чувствителен к атакам с использованием словарей, поэтому его можно легко расшифровать, используя словарь часто используемых слов. Это означает, что злоумышленник может использовать словарь для поиска зашифрованных слов или фраз и их расшифровки.
Использование:
Шифр Альбам с перестановкой используется в различных приложениях, где требуется простое и быстрое шифрование, которое более устойчиво к частотному анализу, чем обычный шифр Альбам.

Вот некоторые примеры использования шифра Альбам с перестановкой:

Шифрование электронных писем, сообщений и файлов. Шифр Альбам с перестановкой можно использовать для шифрования конфиденциальной информации, такой как электронные письма, сообщения и файлы.
Шифрование в реальном времени. Шифр Альбам с перестановкой можно использовать для шифрования данных в реальном времени, таких как голосовые сообщения или видеозвонки.
Шифрование для начинающих. Шифр Альбам с перестановкой является простым и понятным шифром, который может быть использован начинающими криптографами.
Вот несколько конкретных примеров того, где используется шифр Альбам с перестановкой:

В некоторых мобильных приложениях для обмена сообщениями используется шифр Альбам с перестановкой для шифрования сообщений. Например, приложение Signal использует шифр Альбам с перестановкой для шифрования сообщений между пользователями.
В некоторых программах для шифрования файлов используется шифр Альбам с перестановкой. Например, программа GnuPG использует шифр Альбам с перестановкой для шифрования файлов.
В некоторых играх используется шифр Альбам с перестановкой для создания головоломок. Например, в игре "Cryptic Crossword" игроки должны расшифровать слова, которые были зашифрованы с помощью шифра Альбам с перестановкой.

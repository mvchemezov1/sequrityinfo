
N2
Тема:
Шифр замены порядковыми номерами букв в алфавите. Пример создания программного кода, зашифровывающего и расшифровывающего сообщение по алгоритму шифра замены порядковыми номерами букв.
Задача:
 Создать программный код зашифровывающий, а затем расшифровывающий предложение, записанное на русском языке. Использовать шифр замены порядковыми номерами букв, в котором каждая буква русского алфавита заменяется порядковым номером в данном алфавите. При этом замена осуществляется по правилу: буква А заменяется на 1, Б –  на 2 и т.д. 

Формализация задачи:
 Решение поставленной задачи сводится к замене букв исходного текста (алфавит по порядку)их порядковыми номерами в алфавите. Исходные данные: буквы русского алфавита, записанные в алфавитном порядке за исключением буквы Е,Шифруемое сообщение: «простая замена - один из самых древних шифров». Выходные данные: сообшение до его шифровки, после шифровки и после расшифровки.
Разработка алгоритма: 
Алгоритм шифрования простой заменой:
Инициализация
Инициализировать алфавит для шифрования.
Объявить переменные:
исходный текст для шифрования
зашифрованный текст
указатель на алфавит для шифрования
Приведение исходного текста к нижнему регистру
Шифрование
Циклически пройти по исходному тексту:
Получить текущий символ из исходного текста.
Если символ - пробел, то добавить пробел в зашифрованный текст.
Иначе, найти индекс символа в алфавите для шифрования.
Добавить индекс символа в виде строки к зашифрованный текст.
Алгоритм расшифрования простой заменой:
Инициализация
Объявить переменные:
зашифрованный текст
расшифрованный текст
указатель на алфавит для шифрования
Шифрование
Разделить зашифрованный текст на массив строк, разделенных пробелами.
Циклически пройти по массиву строк:
Если строка пустая, то добавить пробел в расшифрованный текст.
Иначе, преобразовать номер символа из строки в число.
Добавить символ, соответствующий индексу числа из алфавита для шифрования, к расшифрованный текст.

Описание каждой строчки:
Private Const ABB As String = "абвгдежзийклмнопрстуфхцчшщъыьэюя"
'Задает константу ABB, которая равна строке, содержащей кириллический алфавит.
Private n As Long
'Задает переменную n типа Long.
Private Sub NumberedCipher()
'Задает процедуру NumberedCipher типа Sub.
Dim STR As String
'Задает локальную переменную STR типа String.
strT As String
'Задает еще одну локальную переменную strT типа String.
strR As String
'Задает третью локальную переменную strR типа String.
STR = "Простая замена это один из самых древних шифров"
'Присваивает переменной STR строковое значение "Простая замена это один из самых древних шифров".
STR = LCase(STR)
'Преобразует значение переменной STR в нижний регистр.
Debug.Print STR
'Выводит значение переменной STR в окно отладки.
Encode STR, strR, ABB
'Вызывает процедуру Encode, передавая ей переменные STR, strR и ABB в качестве аргументов.
Debug.Print strR
'Выводит значение переменной strR в окно отладки.
Decode strR, strT, ABB
'Вызывает процедуру Decode, передавая ей переменные strR, strT и ABB в качестве аргументов.
Debug.Print strT
'Выводит значение переменной strT в окно отладки.
End Sub
'Завершает процедуру NumberedCipher.
Private Sub Encode(STR As String, Result As String, Alphabet As String)
'Задает процедуру Encode типа Sub, которая принимает три аргумента: переменную STR типа String, переменную Result типа String и переменную Alphabet типа String.
Dim i As Long
'Задает локальную переменную i типа Long.
Dim tmp As String
'Задает еще одну локальную переменную tmp типа String.
Dim k As Long
'Задает еще одну локальную переменную k типа Long.
n = Len(STR)
'Присваивает переменной n длину переменной STR.
Result = ""
'Инициализирует переменную Result пустой строкой.
For i = 1 To n
'Начинает цикл For, который выполняет итерацию от 1 до значения переменной n.
tmp = Mid(STR, i, 1)
'Извлекает подстроку из переменной STR, начиная с позиции i и продолжая на один символ. Подстрока присваивается переменной tmp.
If tmp = " " Then
'Проверяет, равно ли значение переменной tmp пустому пространству.
Result = Result & " "
'Если условие истинно, добавляет пустое пространство к```
Else
'Если условие ложно, начинает блок Else.
k = InStr(1, Alphabet, tmp)
'Определяет позицию символа tmp в алфавите Alphabet.
Result = Result & CStr(k) & " "
'Если условие истинно, добавляет к переменной Result значение k в виде строки, за которой следует пустое пространство.
Next i
'Завершает цикл For.
End Sub
'Завершает процедуру Encode.
Private Sub Decode(STR As String, Result As String, Alphabet As String)
'Задает процедуру Decode типа Sub, которая принимает три аргумента: переменную STR типа String, переменную Result типа String и переменную Alphabet типа String.
Dim i As Long
'Задает локальную переменную i типа Long.
Dim tmp As String
'Задает еще одну локальную переменную tmp типа String.
Dim numbers() As String
'Задает массив numbers типа String.
n = Len(STR)
'Присваивает переменной n длину переменной STR.
Result = ""
'Инициализирует переменную Result пустой строкой.
numbers = Split(STR, " ")
'Разбивает строку STR на подстроки по пробелам. Подстроки сохраняются в массиве numbers.
For i = LBound(numbers) To UBound(numbers)
'Начинает цикл For, который выполняет итерацию от нижней границы массива numbers до верхней границы.
If numbers(i) = "" Then
'Проверяет, равно ли значение элемента массива numbers, индекс которого равен i, пустому пространству.
Result = Result & " "
'Если условие истинно, добавляет пустое пространство к переменной Result.
Else
'Если условие ложно, начинает блок Else.
k = CLng(numbers(i))
'Преобразует значение элемента массива numbers, индекс которого равен i, из строки в целое число.
Result = Result & Mid(Alphabet, k, 1)
'Если условие истинно, добавляет к переменной Result символ, соответствующий значению k в алфавите Alphabet.
Next i
'Завершает цикл For.
End Sub
'Завершает процедуру Decode.

Плюсы и минусы шифра:
Плюсы:

Простота использования. Шифр замены буквы порядковым номером и обратно является одним из самых простых шифров, которые существуют. Для его использования необходимо всего лишь составить таблицу, в которой буквы алфавита будут заменены их порядковыми номерами. Например, А будет заменена на 1, Б - на 2 и так далее.

Высокая скорость шифрования. Шифрование и дешифрование текста с помощью этого шифра происходит очень быстро. Это связано с тем, что для шифрования каждого символа необходимо всего лишь выполнить одну операцию - заменить его на соответствующий номер.

Не требует специальных знаний или оборудования. Для использования этого шифра не требуется никаких специальных навыков или оборудования. Достаточно знать таблицу замены букв.

Минусы:

Низкая стойкость к взлому. Шифр замены буквы порядковым номером и обратно является одним из самых простых шифров, которые существуют. Его легко взломать, если известен ключ шифрования. Для этого необходимо всего лишь составить таблицу замены букв в обратном порядке.

Не подходит для конфиденциальной информации. Из-за низкой стойкости к взлому этот шифр не рекомендуется использовать для передачи конфиденциальной информации, такой как пароли, номера кредитных карт или другие важные данные.
Использование:

Шифра замены буквы порядковым номером в алфавите и обратно используется в следующих случаях:

В криптографии для шифрования и дешифрования сообщений. Этот шифр является одним из самых простых и легко взламываемых, но он может быть эффективен для краткосрочного использования.
В играх, таких как криптограммы и головоломки. В этих играх игрокам необходимо расшифровать зашифрованное сообщение, используя этот шифр.
В обучении для изучения алфавита и порядковых номеров букв. Этот шифр может быть полезен для детей, которые только начинают учиться читать и писать.

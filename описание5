Лаб 1
N1

Причина, по которой алгоритм шифрования не работает при указанных значениях ключа, заключается в том, что при этих значениях ключа происходит сдвиг кодового значения символа за пределы диапазона допустимых значений кодовых символов.
В формуле шифрования используется функция ОСТАТ, которая возвращает остаток от деления двух чисел. В данном случае первое число - это кодовое значение символа, которое получается с помощью функции КОДСИМВ. Второе число - это значение ключа.
При значениях ключа, указанных в вопросе, остаток от деления может быть равен нулю, что приводит к ошибке. Например, при значении ключа 4 остаток от деления кодового значения символа "ь" (252) будет равен нулю. Функция СИМВОЛ не может вернуть символ с кодовым значением 0, поэтому возникает ошибка.
Для устранения этой ошибки необходимо изменить формулу шифрования таким образом, чтобы остаток от деления всегда был больше нуля.
N2
Причина указанных недостатков связана с тем, что алгоритм шифрования использует фиксированный сдвиг для каждой буквы, в зависимости от её регистра. Это приводит к тому, что шифрованный текст содержит те же самые символы и пробелы, что и исходный текст, только сдвинутые по таблице символов.
Это означает, что шифротекст не является полностью случайным и может подвергаться атакам с использованием известных характеристик русского языка, таких как частота использования букв и слов. Кроме того, такой алгоритм шифрования не обеспечивает защиту от атак на основе словарей или анализа частотности символов.
N3
Зашифрованный текст, полученный при шифровании средствами электронных таблиц, отличается от зашифрованного текста, полученного при шифровании средствами VBA, по следующим причинам:
•	Используемый алгоритм шифрования. В электронной таблице используется простой алгоритм шифрования, основанный на циклическом сдвиге ASCII-кода символа на заданное количество позиций. В VBA используется более сложный алгоритм, основанный на вычислении остатка от деления ASCII-кода символа на заданное число.
•	Используемый ключ шифрования. В электронной таблице ключ шифрования представляет собой число, заданное в ячейке B2. В VBA ключ шифрования представляет собой число, введенное пользователем в текстовое поле TextBox4.
В результате этих различий зашифрованный текст, полученный при шифровании средствами электронных таблиц, может быть расшифрован более простым способом, чем зашифрованный текст, полученный при шифровании средствами VBA.
N4
Private Sub CommandButton1_Click()
Эта строка определяет подпрограмму с именем "CommandButton1_Click". Эта подпрограмма вызывается всякий раз, когда щелкают кнопку "Зашифровать".
'øèôðîâêà
Этот комментарий указывает, что следующий код предназначен для шифрования.
m = TextBox1.Value
Эта строка извлекает текст из текстового поля с именем "TextBox1" и сохраняет его в переменной "m".
n = Len(m)
Эта строка извлекает длину текста, сохраненного в переменной "m", и сохраняет ее в переменной "n".
k = TextBox4.Value
Эта строка извлекает значение из текстового поля с именем "TextBox4" и сохраняет его в переменной "k".
If TextBox1.Text = "" Then MsgBox "Ââåäèòå òåêñò": GoTo 1
Эта строка проверяет, пусто ли текстовое поле с именем "TextBox1". Если это так, выводится сообщение с просьбой ввести текст, а затем переход к метке 1. Метка 1 - это начало подпрограммы, поэтому это фактически перезапускает подпрограмму.
If TextBox4.Text = "" Then MsgBox "Ââåäèòå êëþ÷": GoTo 1
Подобно предыдущему шагу, эта строка проверяет, пусто ли текстовое поле с именем "TextBox4". Если это так, выводится сообщение с просьбой ввести ключ, а затем переход к метке 1.
For i = 1 To n
Эта строка начинает цикл, который повторяется от 1 до значения переменной "n".
r = Ca(Mid(m, i, 1), k)
Эта строка шифрует один символ из текста, сохраненного в переменной "m", с использованием ключа, сохраненного в переменной "k". Зашифрованный символ сохраняется в переменной "r".
c = c & r
Эта строка добавляет зашифрованный символ к строке, сохраненной в переменной "c".
Next i
Эта строка завершает цикл.
TextBox2.Value = c
Эта строка устанавливает значение текстового поля с именем "TextBox2" в строку, сохраненную в переменной "c".
1:
Эта строка - это метка, которая отмечает начало блока кода.
End Sub
Эта строка завершает подпрограмму с именем "CommandButton1_Click".
Private Function Ca(A, Sh)
Эта строка определяет функцию с именем "Ca", которая принимает два аргумента: символ для шифрования или расшифровки (A) и ключ шифрования/расшифровки (Sh).
Dim chrnew As Integer
Эта строка объявляет переменную с именем "chrnew" типа integer.
Select Case Asc(A)
Эта строка начинает оператор "Select Case", который используется для переключения между различными случаями на основе значения переменной "A".
Case 224 To 255 'ñòðî÷íûå áóêâû
Эта строка проверяет, равно ли значение переменной "A" 224-255. Если это так, она входит в блок "Case".
chrnew = ModMew(Asc(A) + Sh - 224, 32) + 224
Эта строка вычисляет новый код ASCII для символа на основе ключа, сохраненного в переменной "Sh". Новый код ASCII затем преобразуется обратно в символ и сохраняется в переменной "chrnew".
Ca = Chr(chrnew)
Эта строка возвращает зашифрованный или расшифрованный символ, сохраненный в переменной "chrnew".
Case 192 To 223 'ïðîïèñíûå áóêâû
Эта строка проверяет, равно ли значение переменной "A" 192-223. Если это так, она входит в блок "Case".
chrnew = ModMew(Asc(A) + Sh - 192, 32) + 192
Эта строка вычисляет новый
Case Else
Эта строка является общим случаем, который выполняется, если ни один из предыдущих случаев не соответствует. В этом случае символ не шифруется и просто возвращается.
End Select
Эта строка завершает оператор "Select Case".
Private Function ModMew(A, B)
Эта строка определяет функцию с именем "ModMew", которая принимает два аргумента: первое число (A) и второе число (B).
If A >= 0 Then
Эта строка проверяет, больше или равно ли первое число нулю. Если это так, функция возвращает остаток от деления первого числа на второе число.
Else
В противном случае функция возвращает остаток от деления суммы первого числа и второго числа на второе число.
End If
Эта строка завершает оператор "If...Then...Else".
Private Sub CommandButton2_Click()
Эта строка определяет подпрограмму с именем "CommandButton2_Click". Эта подпрограмма вызывается всякий раз, когда щелкают кнопку "Расшифровать".
'ðàñøèôðîâêà
Этот комментарий указывает, что следующий код предназначен для расшифровки.
m = TextBox2.Value
Эта строка извлекает текст из текстового поля с именем "TextBox2" и сохраняет его в переменной "m".
c = Space(n)
Эта строка создает пустую строку длиной, равной длине текста, сохраненного в переменной "m".
k = TextBox4.Value
Эта строка извлекает значение из текстового поля с именем "TextBox4" и сохраняет его в переменной "k".
If TextBox2.Text = "" Then MsgBox "Ââåäèòå øèôðîòåêñò": GoTo 1
Эта строка проверяет, пусто ли текстовое поле с именем "TextBox2". Если это так, выводится сообщение с просьбой ввести зашифрованный текст, а затем переход к метке 1.
If TextBox4.Text = "" Then MsgBox "Ââåäèòå êëþ÷": GoTo 1
Подобно предыдущему шагу, эта строка проверяет, пусто ли текстовое поле с именем "TextBox4". Если это так, выводится сообщение с просьбой ввести ключ, а затем переход к метке 1.
n = Len(m)
Эта строка извлекает длину текста, сохраненного в переменной "m", и сохраняет ее в переменной "n".
For i = 1 To n
Эта строка начинает цикл, который повторяется от 1 до значения переменной "n".
r = Ca(Mid(m, i, 1), -k)
Эта строка расшифровывает один символ из текста, сохраненного в переменной "m", с использованием ключа, сохраненного в переменной "k". Зашифрованный символ сохраняется в переменной "r".
c = c & r
Эта строка добавляет расшифрованный символ к строке, сохраненной в переменной "c".
Next i
Эта строка завершает цикл.
TextBox3.Value = c
Эта строка устанавливает значение текстового поля с именем "TextBox3" в строку, сохраненную в переменной "c".
1:
Эта строка - это метка, которая отмечает начало блока кода.
End Sub
Эта строка завершает подпрограмму с именем "CommandButton2_Click".

